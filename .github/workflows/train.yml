name: Train and Deploy Model

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.7'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install mlflow seaborn

    - name: Run MLflow project
      working-directory: MLProject
      run: mlflow run . --env-manager=local

    - name: Get latest MLflow run_id
      id: get_run_id
      run: |
        RUN_PATH=$(find MLProject/mlruns/0 -maxdepth 1 -type d \
                   -regextype posix-extended -regex '.*/[a-f0-9]{32}' \
                   | sort -r | head -n 1)
        if [ -z "$RUN_PATH" ]; then
          echo "No valid MLflow run_id directory found in mlruns/0"
          exit 1
        fi
        RUN_ID=$(basename "$RUN_PATH")
        echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
        echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
        echo "Latest run_id: $RUN_ID"

    - name: Upload MLflow artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-artifacts
        path: |
          MLProject/artifacts/
          MLProject/mlruns/0/${{ env.RUN_ID }}/artifacts/model

    - name: Commit CI-related changes
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git fetch origin
        git checkout main
        git add MLProject/MLProject
        git commit -m "CI: update MLproject descriptor [run_id ${{ env.RUN_ID }}]" || echo "No changes to commit"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: |
        docker build \
          --build-arg RUN_ID=${{ env.RUN_ID }} \
          -f MLProject/Dockerfile.serve \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/student-performance:latest \
          MLProject

    - name: Push Docker image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/student-performance:latest
